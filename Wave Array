Wave Array:

1. C++:
vector<int> Solution::wave(vector<int> &A) {
    int n=A.size();
    //sort(A.begin(),A.end());
    vector<int> res;
    res=A;
    /*for(int i=0;i<n-1;i+=2)
    {
        swap(res[i],res[i+1]);
    }*/
    for(int i=0;i<n;i+=2)
    {
        if(i>0 && res[i]<res[i-1])
            swap(res[i],res[i-1]);
        if(i<n-1 && res[i]<res[i+1])
            swap(res[i],res[i+1]);
    }
    return res;
}

2. Swift:
import Foundation

class Solution {
	func wave(_ A: inout [Int]) -> [Int] {
        let B = A
        if B.isEmpty {
            return []
        }
        if B.count==1 {
            return B
        }
        var C = Array(B.sorted())
        for i in stride(from: 0, to: C.count - 1, by: 2) {
            var temp = C[i]
            C[i] = C[i+1]
            C[i+1] = temp
        }
        return C
	}
}
