1. C++:
int Solution::isInterleave(string A, string B, string C) {
    int m=A.length(),n=B.length(),z=C.length();
    int i,j;
    if(m+n!=z)
        return 0;
    bool dp[m+1][n+1];
    for(i=0;i<=m;i++) 
        for(j=0;j<=n;j++) 
            dp[i][j]=0;
    for(i=0;i<=m;i++) {
        for(j=0;j<=n;j++) {
            if(i==0 && j==0)
                dp[i][j]=1;
            else if(i==0 && B[j-1]==C[j-1])
                dp[i][j]=dp[i][j-1];
            else if(j==0 && A[i-1]==C[i-1])
                dp[i][j]=dp[i-1][j];
            else if(A[i-1]==C[i+j-1] && B[j-1]!=C[i+j-1])
                dp[i][j]=dp[i-1][j];
            else if(A[i-1]!=C[i+j-1] && B[j-1]==C[i+j-1])
                dp[i][j]=dp[i][j-1];
            else if (A[i-1]==C[i+j-1] && B[j-1]==C[i+j-1]) 
                dp[i][j]=(dp[i-1][j]||dp[i][j-1]);
        }
    }
    return dp[m][n];
}
